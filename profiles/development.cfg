[buildout]
extends =
    project.cfg
	base/tools.cfg

parts +=
    zeo
    omelette
    test
    sublimetext
    i18ndude
    gunicornapp
    gunicorn
    gunicorn-instance
	vscode
	isort
	black
	flake8

# majid.info is for threadframe:
allow-hosts +=
    *.majid.info

auto-checkout +=
	Products.PrintingMailHost

eggs +=
    plone.reload
    Products.PDBDebugMode
    plone.app.debugtoolbar
    Products.PrintingMailHost
    pdbpp
    rainbow_logging_handler


[sources]
# Products.PDBDebugMode 		   = git https://github.com/collective/Products.PDBDebugMode branch=python3
Products.PrintingMailHost 	   = git https://github.com/collective/Products.PrintingMailHost

[zeo]
recipe = plone.recipe.zeoserver
zeo-address = 8800
blob-storage = ${buildout:directory}/var/blobstorage


# Complete, local data.fs
[instance]
debug-mode = on
verbose-security = on

[omelette]
recipe = collective.recipe.omelette
ignore-develop = True
eggs =
    ${instance:eggs}
    ${test:eggs}

[test]
recipe = zc.recipe.testrunner
environment = test-environment
eggs =
    ${buildout:eggs}
    plone.testing>=5.0.0
    plone.app.testing
    plone.app.robotframework[debug]
    plone.app.contenttypes

environment = testenv
defaults = ['--auto-color', '--auto-progress']

[testenv]

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[sublimetext]
recipe = plone.recipe.sublimetext
eggs = ${instance:eggs}
project-name = sits-db-buildout
jedi-enabled = False
sublimelinter-flake8-executable = ${buildout:directory}/bin/flake8
sublimelinter-enabled = True
sublimelinter-flake8-enabled = True

[gunicornapp]
recipe = collective.recipe.template
input = inline:
    from Zope2.Startup.run import make_wsgi_app
    wsgiapp = make_wsgi_app({}, '${buildout:parts-directory}/instance/etc/zope.conf')
    def application(*args, **kwargs):return wsgiapp(*args, **kwargs)
output = ${buildout:bin-directory}/gunicornapp.py


[gunicorn]
recipe = zc.recipe.egg
eggs =
    gunicorn
    ${instance:eggs}
scripts =
    gunicorn

[gunicorn-instance]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ${buildout:directory}/bin/gunicorn -b 127.0.0.1:8804 \
    --threads 4 gunicornapp:application \
    --error-logfile=${buildout:directory}/var/log/instance.log \
    --access-logfile=${buildout:directory}/var/log/instance-access.log \
    --reload

output = ${buildout:bin-directory}/gunicorn-instance
mode = 755

[versions]

[vscode]
recipe = collective.recipe.vscode
eggs = ${instance:eggs}
flake8-enabled = True
flake8-path = ${buildout:directory}/bin/flake8
flake8-args = --max-line-length 88 --ignore Q000,W503
black-enabled = True
black-args = --line-length 88
black-path = ${buildout:directory}/bin/black
isort-enabled = True
isort-path = ${buildout:directory}/bin/isort

[isort]
recipe = zc.recipe.egg
eggs = isort

[black]
recipe = zc.recipe.egg
eggs = black

[flake8]
recipe = zc.recipe.egg
eggs = flake8

